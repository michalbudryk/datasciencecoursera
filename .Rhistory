David
mtcars
qqplot(mtcars$mpg, mtcars$wt)
installed.packages
installed.packages()
a <- David
David -> a
"David" <- 100
David Martinsson
Eric David Martinsson
880427-9696
8804279696 <- "Jag"
Michal <- 8804279696
David <- 9010074590
!kommentarz
David Martinsson
Michal Budryk
Nu får jag i alla fall lära mig programmera i R. En förmånlig färddighet det är det. Synd bara att det kommer så här sent så att jag inte kunde hjälpa David till med hans uppsats
qqplot(mtcars$mpg, mtcars$cyl)
barplot(mtcars$cyl)
barplot(mtcars$mpg)
glm(mtcars$mpg, mtcars$cyl)
glm(mtcars$mpg ~ mtcars$cyl)
glm(mtcars$cyl ~ mtcars$mpg)
qqplot(mtcars$cyl, mtcars$mpg)
install.packages("ggplot2")
install.packages("KernSmooth")
library(KernSmooth)
mtcats
mtcars
barplot(mtcars$cyl)
qqplot(mtcars$cyl, mtcars$mpg)
glm(mtcars$mpg ~ mtcars$cyl)
qqplot(mtcars$cyl, mtcars$mpg, glm(mtcars$mpg ~ mtcars$cyl))
x <- 1
print(x)
x
msg <- "hello"
x <-
1
x <- 5 ##comment
print
y <- 1:20
y
y <- 20:1
z <- 5:-5
vector()
1L
1
a <- 1:inf
a <- 1:Inf
1/0
0*Inf
attributes(msg)
attributes(x)
a <- vector("numeric", length = 10)
Attributes(a)
attributes("a")
read.table(header = FALSE, sep = ",")
read.table
help("read.table")
airquality
Sacramentorealestatetransactions
for(i in 1:10)
print(i)
i
count <- 0
while(count < 10) { }
while(count < 10) {
print(count)
count  <- count + 1
}
while(z >= 3 && z <= 10) {
print(z)
coin <- rbinom(1, 1, 0.5)
if(coin == 1) {
z <- < z + 1
} else {
z <- < z - 1
}
}
while(z >= 3 && z <= 10) {
print(z)
coin <- rbinom(1, 1, 0.5)
if(coin == 1) {
z <- z + 1
} else {
z <- z - 1
}
}
z <- 5
while(z >= 3 && z <= 10) {
print(z)
coin <- rbinom(1, 1, 0.5)
if(coin == 1) {
z <- z + 1
} else {
z <- z - 1
}
}
while(z >= 3 && z <= 10) {
print(z)
coin <- rbinom(1, 1, 0.5)
if(coin == 1) {
z <- z + 1
} else {
z <- z - 1
}
}
z<-5
while(z >= 3 && z <= 10) {
print(z)
coin <- rbinom(1, 1, 0.5)
if(coin == 1) {
z <- z + 1
} else {
z <- z - 1
}
}
for(i in 1:100) {
if(i <= 20) {
next
}
print(z)
}
for(i in 1:22) {
if(i <= 20) {
next
}
print(z)
}
clear()
add2 <- function(x, y) {
x + y
}
add2(3, 5)
##fgf
above10 <- funtion(x) {
use <- x > 10
x[use]
}
above10 <- funtion(x) {
use <- x > 10
x[use]
}
above10 <- function(x) {
use <- x > 10
x[use]
}
aboven <- function(x, n) {
use <- x > n
x[use]
}
x <- 1:20
above10(x)
aboven(x, 12)
aboven <- function(x, n = 10) {
use <- x > n
x[use]
}
aboven(x)
columnmean <- function(y, removeNA = TRUE) {
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc) {
means[i] <- mean(y[, i], na.rm = removeNA)
}
print(means)
}
columnmean(airquality)
columnmean(airquality, removeNA = FALSE)
add2(x)
formals(add2)
formals(columnmean)
add2
na.rm
rm.na
sd
lm
glm
c <- 123
print(c)
c
print
print(x)
Sys.time()
x <- Sys.time()
x
unclass(x)
class(x)
y <- Sys.time()
y - x
cube <- function (x, n) {
x^3
}
cube(3)
x <- 1:10
if(x < 5) {
x <- 0
}
x <- 1:10
for(i in 1:10) {
if(x[i] > 5) {}
}
for(i in 1:10) {
if(x[i] > 5) {
x[i] <- 0
}
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
source('~/datasciencecoursera/pollutantmean.R')
read.csv("001.csv")
read.csv("~/datasciencecoursera/specdata/001.csv")
head(read.csv("~/datasciencecoursera/specdata/001.csv"))
pollutantmean("specdata", 1:10)
setwd("~/datasciencecoursera/specdata")
pollutantmean("specdata", 1:10)
setwd("~/datasciencecoursera")
pollutantmean("specdata", 1:10)
setwd("~/")
pollutantmean("specdata", 1:10)
setwd("~/datasciencecoursera")
pollutantmean("specdata", 1:10)
pollutantmean("~/datasciencecoursera/specdata", 1:10)
pollutantmean("~/datasciencecoursera/specdata/", 1:10)
pollutantmean("~/datasciencecoursera/specdata", 1:10)
pollutantmean("specdata", 1)
pollutantmean("specdata", 32)
pollutantmean("specdata", id = 32)
pollutantmean("specdata", sulfate, 1:10)
head(read.csv("specdata/001.csv"))
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "sulfate", 1)
pollutantmean("specdata", "sulfate", 1)
pollutantmean("specdata", "nitrate", 1)
pollutantmean("specdata", "nitrate", 1:100)
pollutantmean("specdata", "nitrate", 1:332)
source('~/datasciencecoursera/complete.R')
complete("specdata", 1)
complete("specdata", 1:10)
complete("specdata", 50:100)
complete("specdata", 1:332)
source('~/datasciencecoursera/corr.R')
corr("specdata", 10)
